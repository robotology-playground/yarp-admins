# Generated by "yarp cmake"

# A cmake file to get started with for new YARP projects.
# It assumes you want to build an executable from source code in 
# the current directory.

cmake_minimum_required(VERSION 2.8)
set(PROJECTNAME yarpviz)
project(${PROJECTNAME})

set(CMAKE_AUTOMOC ON)
set(CMAKE_INCLUDE_CURRENT_DIR ON)

include_directories(./ 
                    ../QGVCore
                    ${YARP_INCLUDE_DIRS})

set(yarpviz_qt_SRCS ggraph.cpp main.cpp MainWindow.cpp QGraphicsViewEc.cpp NetworkProfiler.cpp)

set(yarpviz_qt_HDRS ggraph.h MainWindow.h QGraphicsViewEc.h QGraphicsViewEc.h NetworkProfiler.h)

set(yarpviz_qt_QRC_FILES ress.qrc)

set(yarpviz_qt_UI_FILES MainWindow.ui)


qt5_add_resources(yarpviz_qt_QRC_GEN_SRCS ${yarpviz_qt_QRC_FILES})
qt5_wrap_ui(yarpviz_qt_UI_GEN_SRCS ${yarpviz_qt_UI_FILES})

source_group("Source Files" FILES ${yarpviz_qt_SRCS})
source_group("Header Files" FILES ${yarpviz_qt_HDRS})
source_group("Resources Files" FILES ${yarpviz_qt_QRC_FILES})
source_group("UI Files" FILES ${yarpviz_qt_UI_FILES})
source_group("Generated Files" FILES ${yarpviz_qt_QRC_GEN_SRCS}
                                  ${yarpviz_qt_UI_GEN_SRCS})


add_executable(yarpviz-qt WIN32 ${yarpviz_qt_SRCS}
                                      ${yarpviz_qt_HDRS}
                                      ${yarpviz_qt_QRC_FILES}
                                      ${yarpviz_qt_QRC_GEN_SRCS}
                                      ${yarpviz_qt_UI_GEN_SRCS}
                                      ${yarpviz_qt_UI_FILES})


target_link_libraries(yarpviz-qt ${YARP_LIBRARIES} YARP::YARP_manager qgvcore)
qtyarp_use_modules(yarpviz-qt Widgets Gui)

qtyarp_deprecate_with_cmake_version(2.8.11)
if(WIN32 AND CMAKE_VERSION VERSION_LESS 2.8.11)
    target_link_libraries(yarpviz-qt YARP::YARP_manager qgvcore Qt5::WinMain)
endif()

install(TARGETS yarpviz-qt COMPONENT utilities DESTINATION ${CMAKE_INSTALL_BINDIR})

#yarp_osx_duplicate_and_add_bundle(TARGET_ORIG yarpviz-qt
#                                TARGET_DEST yarpviz-qt.app
#                                APP_ICON Resources/AppIcon.icns
#                                INSTALL_COMPONENT utilities
#                                INSTALL_DESTINATION "${CMAKE_INSTALL_BINDIR}")



